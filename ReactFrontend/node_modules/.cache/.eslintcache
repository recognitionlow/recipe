[{"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\index.js":"1","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\App.js":"2","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\reportWebVitals.js":"3","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Home\\index.js":"4","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\CreateRecipe\\index.js":"5","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Signup\\index.js":"6","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Login\\index.js":"7","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\UpdateRecipe\\index.js":"8","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Profile\\EditProfile\\index.js":"9","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\NavBar\\index.js":"10","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Profile\\ViewProfile\\index.js":"11","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\RecipeDetail\\index.js":"12","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\RecipeCard\\index.js":"13","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\ShoppingList\\index.js":"14","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\MyRecipes\\index.js":"15","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\RecipeCardNoFav\\index.js":"16","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\MyRecipeCard\\index.js":"17"},{"size":535,"mtime":1680724801090,"results":"18","hashOfConfig":"19"},{"size":1465,"mtime":1681342300880,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1680724801091,"results":"21","hashOfConfig":"19"},{"size":10532,"mtime":1681244492247,"results":"22","hashOfConfig":"19"},{"size":24437,"mtime":1681351059776,"results":"23","hashOfConfig":"19"},{"size":4789,"mtime":1680886367229,"results":"24","hashOfConfig":"19"},{"size":3249,"mtime":1681225968447,"results":"25","hashOfConfig":"19"},{"size":30209,"mtime":1681351059776,"results":"26","hashOfConfig":"19"},{"size":4465,"mtime":1680862459783,"results":"27","hashOfConfig":"19"},{"size":4295,"mtime":1681347946500,"results":"28","hashOfConfig":"19"},{"size":264,"mtime":1680868778385,"results":"29","hashOfConfig":"19"},{"size":14551,"mtime":1681301838627,"results":"30","hashOfConfig":"19"},{"size":3900,"mtime":1681228588827,"results":"31","hashOfConfig":"19"},{"size":9706,"mtime":1681344188473,"results":"32","hashOfConfig":"19"},{"size":7198,"mtime":1681350881417,"results":"33","hashOfConfig":"19"},{"size":1107,"mtime":1681339133925,"results":"34","hashOfConfig":"19"},{"size":1340,"mtime":1681349596318,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"89z3lw",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\index.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\App.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\reportWebVitals.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Home\\index.js",["92"],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\CreateRecipe\\index.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Signup\\index.js",["93","94"],[],"import React, {  useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport './style.css';\n\nconst Signup = () => {\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [errors, setErrors] = useState(null);\n\n    const naviagate = useNavigate();\n\n    const submithandler = (e) => {\n        e.preventDefault();\n        fetch (\n            \"http://127.0.0.1:8000/accounts/signup/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    'username': username,\n                    'email': email,\n                    'password': password,\n                    'password2': password2\n                })\n            }\n        )\n        .then(response => {\n            if (response.ok) {\n                naviagate('/accounts/login');\n            }\n            else if (response.status === 400) {\n                return response.json().then((data) => {\n                    setErrors(data);\n                })\n            }\n        });\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row align-items-center g-0\">\n                <div className=\"col\">\n                    <form className=\"form-horizontal\" onSubmit={submithandler}>\n                        <h3>Do you want to have a healthy meal in 10 mins?</h3>\n                        <h2>Join us right now!</h2>\n                        <div className=\"form-row\">\n                            <input type=\"text\" className=\"form-control\" name=\"username\" id=\"Username\" placeholder=\"&#xf0e0;   Username\" style={{fontFamily: ['Open Sans', 'Font Awesome 5 Free']}} required onChange={e => setUsername(e.target.value)}/>\n                        </div>\n                        {errors && errors.username && (\n                            <>\n                                <br/><p style={{ color: 'red' }}>{errors.username}</p>\n                            </>\n                        )}\n                        <div className=\"form-row\">\n                            <input type=\"email\" className=\"form-control\" name=\"email\" id=\"Email\" placeholder=\"&#xf0e0;   youremail@example.com\" style={{fontFamily: ['Open Sans', 'Font Awesome 5 Free']}} required onChange={e => setEmail(e.target.value)}/>\n                        </div>\n                        {errors && errors.email && (\n                            <>\n                                <br/><p style={{ color: 'red' }}>{errors.email}</p>\n                            </>\n                        )}\n                        <div className=\"form-row\">\n                            <input type=\"password\" className=\"form-control\" name=\"password\" id=\"Password1\" placeholder=\"&#xf023;   Enter your password\" style={{fontFamily: ['Open Sans', 'Font Awesome 5 Free']}} required onChange={e => setPassword(e.target.value)}/>\n                        </div>\n                        {errors && errors.password && (\n                            <>\n                                <p style={{ color: 'red' }}>{errors.password}</p>\n                            </>\n                        )}\n                        <div className=\"form-row\">\n                            <input type=\"password\" className=\"form-control\" name=\"password2\" id=\"Password2\" placeholder=\"&#xf023;   Re-enter your password\" style={{fontFamily: ['Open Sans', 'Font Awesome 5 Free']}} required onChange={e => setPassword2(e.target.value)}/>\n                        </div>\n                        {errors && errors.password2 && (\n                            <>\n                                <p style={{ color: 'red' }}>{errors.password2}</p>\n                            </>\n                        )}\n                        <p id=\"login\">Already have an account? <Link className=\"link\" to=\"/accounts/login\">Log in</Link></p>\n                        <div className=\"form-row\">\n                            <button type=\"submit\" className=\"Button\">SIGN UP</button>\n                        </div>\n                        <p id=\"agreement\">By continuing, you agree to accept our <a className=\"link\" href=\"\">Privacy Police</a> & <a className=\"link\" href=\"\">Terms of Services</a>.</p>\n                    </form>\n                </div>\n                <div className=\"col\" style={{height: '100vh', width: '100%', backgroundSize: 'cover', backgroundPosition: 'center', backgroundImage: \"url('https://static.onecms.io/wp-content/uploads/sites/44/2021/12/30/butternut-squash-and-black-bean-enchiladas.jpg')\"}}>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup;","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Login\\index.js",["95","96"],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\UpdateRecipe\\index.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Profile\\EditProfile\\index.js",["97"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './style.css';\r\n\r\nconst EditProfile = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [avatar, setAvatar] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n\r\n    const naviagate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        setToken(token);\r\n    }, [])\r\n\r\n    const submithandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('username', username);\r\n        formData.append('email', email);\r\n        formData.append('password', password);\r\n        formData.append('password2', password2);\r\n        formData.append('phone', phone);\r\n        formData.append('avatar', avatar);\r\n        console.log(Object.fromEntries(formData));\r\n        fetch(\r\n            \"http://127.0.0.1:8000/accounts/profile/edit/\", {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: formData,\r\n            }\r\n        )\r\n        .then(response => {\r\n            if (response.ok) {\r\n                naviagate('/');\r\n            }\r\n            else {\r\n                return response.json().then((data) => {\r\n                    setErrors(data);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n        <h2 className=\"text-center\">Edit Profile</h2>\r\n        <form onSubmit={submithandler}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"avatar\">Update jpg to change your avatar</label>\r\n                <input type=\"file\" className=\"form-control-file\" id=\"avatar\" onChange={e => setAvatar(e.target.files[0])}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" className=\"form-control\" name=\"username\" id=\"username\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)}/>\r\n            </div>\r\n            {errors && errors.username && (\r\n                <>\r\n                    <br/><p style={{ color: 'red' }}>{errors.username}</p>\r\n                </>\r\n            )}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"New password\" onChange={e => setPassword(e.target.value)}/>\r\n            </div>\r\n            {errors && errors.password && (\r\n                <>\r\n                    <p style={{ color: 'red' }}>{errors.password}</p>\r\n                </>\r\n            )}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password2\">Confirm Password</label>\r\n                <input type=\"password\" className=\"form-control\" name=\"password2\" id=\"password2\" placeholder=\"New password\" onChange={e => setPassword2(e.target.value)}/>\r\n            </div>\r\n            {errors && errors.password2 && (\r\n                <>\r\n                    <p style={{ color: 'red' }}>{errors.password2}</p>\r\n                </>\r\n            )}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Enter Email\" onChange={e => setEmail(e.target.value)}/>\r\n            </div>\r\n            {errors && errors.email && (\r\n                <>\r\n                    <br/><p style={{ color: 'red' }}>{errors.email}</p>\r\n                </>\r\n            )}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                <input type=\"tel\" className=\"form-control\" name=\"phone\" id=\"phoneNumber\" placeholder=\"Enter Phone Number\" onChange={e => setPhone(e.target.value)}/>\r\n            </div>\r\n            <div className=\"button-group\">\r\n                <button type=\"submit\" className=\"button\" >Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile;","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\NavBar\\index.js",["98","99","100","101"],[],"import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, Outlet } from 'react-router-dom';\nimport Profile from '../Profile/ViewProfile';\nimport { Dropdown } from 'react-bootstrap';\nimport logo from '../../images/logo.png';\nimport blank from '../../images/blank-profile.png';\nimport './style.css'\n\n\nconst NavBar = () => {\n    const [profile, setProfile] = useState(null);\n    const [authenticated, setAuthenticated] = useState(false)\n    const naviagate = useNavigate()\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        fetch(\"http://127.0.0.1:8000/accounts/profile/details/\", {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then(response => {\n            if (response.ok) {\n                setAuthenticated(true);\n                return response.json().then((data) => {\n                    setProfile(data)\n                })\n            }\n            else {\n                setAuthenticated(false);\n            }\n        })\n        \n        \n    }, [])\n\n    const logouthandler = () => {\n        const token = localStorage.getItem('token');\n        fetch(\"http://127.0.0.1:8000/accounts/logout/\", {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        .then(request => {\n            if (request.ok) {\n                localStorage.removeItem('token')\n                window.location.reload();\n            }\n        })\n    }\n\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg fixed-top bg-body-tertiary\">\n                <div className=\"container-fluid\">\n                    <img src={logo} style={{width: '80px', height: '80px'}}/>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" to=\"/\">Home</Link>\n                            </li>\n\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" to=\"/my-recipe\">My Recipe</Link>\n                            </li>\n\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" to=\"recipes/create-recipe\">Add Recipe</Link>\n                            </li>\n                            <li className='nav-item'>\n                                <Link className=\"nav-link active\" to=\"/shopping-list\">Shopping List</Link>\n                            </li>\n                        </ul>\n                        {authenticated ? (\n                            <>\n                                {profile && profile.avatar && (<img src={profile.avatar} style={{width: '60px', height: '60px', borderRadius: '50%', marginRight: '20px'}}/>)}\n                                {profile && !profile.avatar && (<img src={blank} style={{width: '60px', height: '60px', borderRadius: '50%', marginRight: '20px'}}/>)}\n                                \n                                {profile && profile.email && profile.phone && (    \n                                    <Dropdown>\n                                        <Dropdown.Toggle>\n                                        User Info\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu>\n                                            <Profile email={profile.email} phone={profile.phone}/>\n                                            <Link className=\"dropdown-item\" to=\"/accounts/profile/edit\">Edit Profile</Link>\n                                            <Dropdown.Item onClick={logouthandler}>Log out</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                )}\n                            </>\n                        ) : (\n                            <Link className='nav-item' to=\"/accounts/login\">Log in</Link> \n                        )}\n                    </div>\n                </div>\n            </nav>\n            <Outlet/>\n        </>\n    )\n}\nexport default NavBar;",[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\Profile\\ViewProfile\\index.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\RecipeDetail\\index.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\RecipeCard\\index.js",["102","103"],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\ShoppingList\\index.js",[],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\MyRecipes\\index.js",["104"],[],"import {React, useEffect, useState} from 'react';\r\nimport RecipeCardNoFav from '../RecipeCardNoFav';\r\nimport './style.css'\r\nimport MyRecipeCard from '../MyRecipeCard';\r\n\r\nconst MyRecipes = () => {\r\n    const count = 1\r\n    const [authenticated, setAuthenticated] = useState(false)\r\n    const [display, setDisplay] = useState('created')\r\n    const [created, setCreated] = useState({recipes: [], page: 1})\r\n    const [favorited, setFavorited] = useState({recipes: [], page: 1})\r\n    const [interacted, setInteracted] = useState({recipes: [], page: 1})\r\n    const [hasEnded, setHasEnded] = useState(true);\r\n    const [firstPage, setFirstPage] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (display === 'created') {\r\n            fetch(`http://127.0.0.1:8000/userfunction/my-recipe/created/?count=${count}&page=${created.page}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    setAuthenticated(true)\r\n                    return response.json().then(data => {\r\n                        setCreated({...created, recipes: data.results})\r\n                        setFirstPage(data.previous === null);\r\n                        setHasEnded(data.next === null);\r\n                    })\r\n                }\r\n                else if (response.status === 401) {\r\n                    setAuthenticated(false)\r\n                }\r\n                else {\r\n                    console.log('unexpected error')\r\n                }\r\n            })\r\n        }\r\n        else if (display === 'favorited') {\r\n            fetch(`http://127.0.0.1:8000/userfunction/my-recipe/favorited/?count=${count}&page=${favorited.page}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    setAuthenticated(true)\r\n                    return response.json().then(data => {\r\n                        setFavorited({...favorited, recipes: data.results})\r\n                        setFirstPage(data.previous === null);\r\n                        setHasEnded(data.next === null);\r\n                    })\r\n                }\r\n                else if (response.status === 401) {\r\n                    setAuthenticated(false)\r\n                }\r\n                else {\r\n                    console.log('unexpected error')\r\n                }\r\n            })\r\n        }\r\n        else if (display === 'interacted') {\r\n            fetch(`http://127.0.0.1:8000/userfunction/my-recipe/interacted/?count=${count}&page=${interacted.page}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    setAuthenticated(true)\r\n                    return response.json().then(data => {\r\n                        setInteracted({...interacted, recipes: data.results})\r\n                        setFirstPage(data.previous === null);\r\n                        setHasEnded(data.next === null);\r\n                    })\r\n                }\r\n                else if (response.status === 401) {\r\n                    setAuthenticated(false)\r\n                }\r\n                else {\r\n                    console.log('unexpected error')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [display, created.page, favorited.page, interacted.page])\r\n\r\n    const handlePrev = (e) => {\r\n        e.preventDefault()\r\n        if (display === 'created') {\r\n            setCreated({...created, page: created.page - 1})\r\n        }\r\n        if (display === 'favorited') {\r\n            setFavorited({...favorited, page: favorited.page - 1})\r\n        }\r\n        if (display === 'interacted') {\r\n            setInteracted({...interacted, page: interacted.page - 1})\r\n        }\r\n    }\r\n\r\n    const handleNext = (e) => {\r\n        e.preventDefault()\r\n        if (display === 'created') {\r\n            setCreated({...created, page: created.page + 1})\r\n        }\r\n        if (display === 'favorited') {\r\n            setFavorited({...favorited, page: favorited.page + 1})\r\n        }\r\n        if (display === 'interacted') {\r\n            setInteracted({...interacted, page: interacted.page + 1})\r\n        }\r\n    }\r\n\r\n    const switchtocreated = (e) => {\r\n        e.preventDefault()\r\n        setDisplay('created')\r\n    }\r\n    \r\n    const switchtofavorited = (e) => {\r\n        e.preventDefault()\r\n        setDisplay('favorited')\r\n    }\r\n    \r\n    const switchtointeracted = (e) => {\r\n        e.preventDefault()\r\n        setDisplay('interacted')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {authenticated ? (<div className=\"main-container\">\r\n                <div className='pagetraverse d-flex'>\r\n                    {display === \"created\" ? <button className='btn btn-danger' style={{ marginLeft: '2em', marginRight: '2em' }} onClick={switchtocreated}>Recipes I Created</button> : <button className='btn btn-warning' style={{ marginLeft: '2em', marginRight: '2em' }} onClick={switchtocreated}>Recipes I Created</button>}\r\n                    {display === \"favorited\" ? <button className='btn btn-danger' style={{ marginLeft: '2em', marginRight: '2em' }} onClick={switchtofavorited}>My Favorite Recipes</button> : <button className='btn btn-warning' style={{ marginLeft: '2em', marginRight: '2em' }} onClick={switchtofavorited}>My Favorite Recipes</button>}\r\n                    {display === \"interacted\" ? <button className='btn btn-danger' style={{ marginLeft: '2em', marginRight: '2em' }} onClick={switchtointeracted}>Interacted Recipes</button> : <button className='btn btn-warning' style={{ marginLeft: '2em', marginRight: '2em' }} onClick={switchtointeracted}>Interacted Recipes</button>}\r\n                </div>\r\n                <div className='recipes-container'>\r\n                    {display === 'created' && (created.recipes?.map(recipe => (\r\n                        <MyRecipeCard key={recipe.id} className='recipe' recipe={recipe}/>\r\n                    )))}\r\n                    {display === 'favorited' && (favorited.recipes?.map(recipe => (\r\n                        <RecipeCardNoFav key={recipe.id} className='recipe' recipe={recipe}/>\r\n                    )))}\r\n                    {display === 'interacted' && (interacted.recipes?.map(recipe => (\r\n                        <RecipeCardNoFav key={recipe.id} className='recipe' recipe={recipe}/>\r\n                    )))}\r\n                </div>\r\n                <div className='pagetraverse d-flex'>\r\n                    <button className='button' disabled={firstPage} style={{ marginLeft: '2em', marginRight: '2em' }} onClick={handlePrev}>prev</button>\r\n                    <button className='button' disabled={hasEnded} style={{ marginLeft: '2em', marginRight: '2em' }} onClick={handleNext}>next</button>\r\n                </div>\r\n            </div>) : (\r\n                <h1>You Are Not Logged in. Please Log to View This Page.</h1>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyRecipes;","E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\RecipeCardNoFav\\index.js",["105"],[],"E:\\school\\CSC309\\Project\\p3\\ReactFrontend\\src\\components\\MyRecipeCard\\index.js",["106"],[],{"ruleId":"107","severity":1,"message":"108","line":32,"column":8,"nodeType":"109","endLine":32,"endColumn":20,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":85,"column":82,"nodeType":"113","endLine":85,"endColumn":110},{"ruleId":"111","severity":1,"message":"112","line":85,"column":131,"nodeType":"113","endLine":85,"endColumn":159},{"ruleId":"111","severity":1,"message":"112","line":64,"column":78,"nodeType":"113","endLine":64,"endColumn":106},{"ruleId":"111","severity":1,"message":"112","line":64,"column":127,"nodeType":"113","endLine":64,"endColumn":155},{"ruleId":"114","severity":1,"message":"115","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"118","line":13,"column":11,"nodeType":"116","messageId":"117","endLine":13,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":56,"column":21,"nodeType":"113","endLine":56,"endColumn":78},{"ruleId":"119","severity":1,"message":"120","line":77,"column":64,"nodeType":"113","endLine":77,"endColumn":173},{"ruleId":"119","severity":1,"message":"120","line":78,"column":65,"nodeType":"113","endLine":78,"endColumn":165},{"ruleId":"107","severity":1,"message":"121","line":31,"column":8,"nodeType":"109","endLine":31,"endColumn":10,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":84,"column":13,"nodeType":"113","endLine":84,"endColumn":123},{"ruleId":"107","severity":1,"message":"125","line":88,"column":8,"nodeType":"109","endLine":88,"endColumn":64,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"124","line":12,"column":13,"nodeType":"113","endLine":12,"endColumn":123},{"ruleId":"123","severity":1,"message":"124","line":19,"column":13,"nodeType":"113","endLine":19,"endColumn":123},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array. You can also do a functional update 'setQuery(q => ...)' if you only need 'query' in the 'setQuery' call.","ArrayExpression",["127"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'naviagate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'recipe.id'. Either include it or remove the dependency array.",["128"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'created', 'favorited', and 'interacted'. Either include them or remove the dependency array. You can also do a functional update 'setCreated(c => ...)' if you only need 'created' in the 'setCreated' call.",["129"],{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [query, query.page]",{"range":"136","text":"137"},"Update the dependencies array to be: [recipe.id]",{"range":"138","text":"139"},"Update the dependencies array to be: [display, created.page, favorited.page, interacted.page, created, favorited, interacted]",{"range":"140","text":"141"},[1227,1239],"[query, query.page]",[1236,1238],"[recipe.id]",[3541,3597],"[display, created.page, favorited.page, interacted.page, created, favorited, interacted]"]